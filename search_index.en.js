window.searchIndex = {"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":4,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}},"1":{"docs":{},"df":0,"2":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"\\":{"docs":{},"df":0,")":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.4142135623730951}},"df":1}},"1":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.23606797749979},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":5,".":{"docs":{},"df":0,".":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,"^":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}}}}}},"0":{"docs":{},"df":0,"^":{"docs":{},"df":0,"6":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2},"{":{"docs":{},"df":0,"1":{"docs":{},"df":0,"8":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1},"6":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":3.0}},"df":1},"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.449489742783178}},"df":1},"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.7320508075688772}},"df":1}},"2":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":2,"0":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1,"2":{"docs":{},"df":0,"3":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3},"4":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}}},"4":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}}},"^":{"docs":{},"df":0,"j":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1},"{":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}},"|":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.8284271247461903}},"df":1,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"x":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"3":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":1,"2":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}},"4":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}},"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1,"]":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{},"df":0,"b":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}},"5":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2},"6":{"docs":{},"df":0,"4":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"7":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/abc-string/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951}},"df":2},"o":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":2}}}}},"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/algorithms/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":4}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":2.8284271247461903}},"df":3},"w":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":4}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}},"p":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.6457513110645907}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}},"x":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/archive/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"{":{"docs":{},"df":0,"h":{"docs":{},"df":0,"}":{"docs":{},"df":0,"{":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}},"y":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.8284271247461903},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":4.242640687119285}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}}}},"k":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":3.3166247903554},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":2}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":1}}}}},"b":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":2.449489742783178},"https://latenitecoding.github.io/set-theory/":{"tf":4.242640687119285}},"df":5,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/balanced-tree-path/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951}},"df":2}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/streets-behind/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}},"w":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":4}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bipartite-graph/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0}},"df":2}}}}}},"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":3.872983346207417},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772}},"df":1}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.23606797749979},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951}},"df":2}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}},"x":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":5.291502622129181}},"df":1}}}},"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":1}}}},"c":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":3.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":2.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/zig/":{"tf":3.4641016151377544}},"df":5,"/":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.6457513110645907}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":8}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}},"p":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":2,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/a-cappella-recording/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0}},"df":3}}},"e":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772}},"df":3}},"s":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":7}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/champernowne-verification/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951}},"df":2}}}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}},"o":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":3.3166247903554},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":3.3166247903554}},"df":2}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":2.8284271247461903},"https://latenitecoding.github.io/set-theory/":{"tf":2.449489742783178}},"df":3,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.6457513110645907}},"df":1}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951}},"df":2}}},"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2},"x":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.23606797749979},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":3.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":3.3166247903554},"https://latenitecoding.github.io/set-ops/":{"tf":3.4641016151377544},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":7}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"q":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":3}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":3,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/contests/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":2.23606797749979},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":4}},"x":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":2}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":2.449489742783178},"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":3},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":3.7416573867739413},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}}}}}}},"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.449489742783178}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/data-structures/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":3.605551275463989}},"df":3}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":3.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":2.449489742783178},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":5,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":2}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":3.1622776601683795}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":6}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}}}}},"i":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/four-die-rolls/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":5}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.7320508075688772}},"df":2}}}},"o":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":3}},"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/segment-drawing/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}},"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":4.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":2.8284271247461903},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":8}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/eccentric-excursion/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}}}}}},"d":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.8284271247461903}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/range-editing/":{"tf":1.0}},"df":2}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":5.0990195135927845},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":4}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":3.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0}},"df":1}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":4.242640687119285}},"df":2}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}}},"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772}},"df":1}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.6457513110645907}},"df":5}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/eccentric-excursion/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":1}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/exercises/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":3.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":2}}}}}},"f":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}}},"b":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}},"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2},"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":6}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://latenitecoding.github.io/flow-network/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/maximum-flow/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0}},"df":5}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"m":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/four-die-rolls/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"{":{"docs":{},"df":0,"k":{"docs":{},"df":0,"}":{"docs":{},"df":0,"{":{"docs":{},"df":0,"2":{"docs":{},"df":0,"}":{"docs":{},"df":0,",":{"docs":{},"df":0,"c":{"docs":{},"df":0,"+":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"{":{"docs":{},"df":0,"k":{"docs":{},"df":0,"}":{"docs":{},"df":0,"{":{"docs":{},"df":0,"2":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"}":{"docs":{},"df":0,"{":{"docs":{},"df":0,"2":{"docs":{},"df":0,"}":{"docs":{},"df":0,",":{"docs":{},"df":0,"c":{"docs":{},"df":0,"+":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"{":{"docs":{},"df":0,"l":{"docs":{},"df":0,"}":{"docs":{},"df":0,"{":{"docs":{},"df":0,"2":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/matrix-fraud/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":3}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":3.872983346207417}},"df":1,"a":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}}},"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":4.58257569495584},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":4}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"n":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.449489742783178},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":2.8284271247461903}},"df":6}}}},"o":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2,"o":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/bipartite-graph/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":2.449489742783178}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":3.0}},"df":1}},"o":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/rampant-growth/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/sequence-guessing/":{"tf":1.0}},"df":2}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.449489742783178},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951}},"df":2}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":3}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":3.0}},"df":1,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.6457513110645907}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"o":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"g":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":6}},"m":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,".":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":3},"3":{"docs":{},"df":0,"2":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"p":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":1},"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951}},"df":2,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":1}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}}}},"i":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":2}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":5},"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":5},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.23606797749979},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":2}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.23606797749979},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":2.449489742783178},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":4},"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.7320508075688772}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.23606797749979}},"df":2}}}},"v":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":4.58257569495584}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":1}}}},"t":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":1},"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/item-selection/":{"tf":1.0}},"df":2},"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}}}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/java/":{"tf":3.872983346207417},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2,"'":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772}},"df":1},".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":2.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":2.23606797749979}},"df":3,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}},"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1,"n":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":4}}}}},"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/java/":{"tf":3.1622776601683795},"https://latenitecoding.github.io/languages/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":4.123105625617661}},"df":3}}}}},"r":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":3},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":4},"p":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.449489742783178},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"q":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":3.872983346207417},"https://latenitecoding.github.io/on-call-team/":{"tf":2.449489742783178},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":3}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772}},"df":2}}},"n":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2},"k":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.23606797749979}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":1}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":2,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":2}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":5}},"p":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/on-call-team/":{"tf":2.8284271247461903}},"df":2},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":3.7416573867739413}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/matrix-fraud/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"x":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/maximum-flow/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951}},"df":2}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.6457513110645907}},"df":3}},"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951}},"df":2,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.23606797749979},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":3,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.8284271247461903}},"df":4}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.23606797749979},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"m":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":3}},"v":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951}},"df":3,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0}},"df":1}}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}}}}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":7}},"g":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/flow-network/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951}},"df":2}}}}},"w":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":3}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":3.872983346207417}},"df":1}},"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":1}}},"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0}},"df":3}},"e":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":5}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":4.795831523312719},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":4.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":6}}}}}},"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951}},"df":1,"^":{"docs":{},"df":0,"3":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":3.605551275463989},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772}},"df":1}},"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"n":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":5,"c":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":3}},"p":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1},"r":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":5}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":4},"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/ordered-problem-set/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":4}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":5,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}}}}}},"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":1}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"z":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2},"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/balanced-tree-path/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951}},"df":3}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":1.7320508075688772}},"df":3}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0}},"df":1}},"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0}},"df":1}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}}}},"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0}},"df":4}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.449489742783178}},"df":1}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.23606797749979},"https://latenitecoding.github.io/zig/":{"tf":3.0}},"df":2,"f":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.23606797749979},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":2.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/ordered-problem-set/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":7}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":4}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/zig/":{"tf":4.123105625617661}},"df":3,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":2}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":2}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":2.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":4}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":4}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.449489742783178}},"df":1,"+":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"\\":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/rampant-growth/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/range-editing/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}},"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":2.6457513110645907}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.6457513110645907}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/a-cappella-recording/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":3}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":2.23606797749979},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":5}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":2.449489742783178},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/four-die-rolls/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":2}},"w":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":5.477225575051661}},"df":1}},"u":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"s":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.8284271247461903}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":3}},"_":{"docs":{},"df":0,"1":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1},"2":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":5}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":2}}},"i":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":3}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2}}}},"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":2.8284271247461903},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":5},"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/segment-drawing/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/item-selection/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":3.605551275463989},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":6}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/sequence-guessing/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":4.58257569495584}},"df":1}}}},"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":3.605551275463989},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/ordered-problem-set/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":4.242640687119285},"https://latenitecoding.github.io/set-theory/":{"tf":7.810249675906654},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":8},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/triple-sevens/":{"tf":1.0}},"df":2},"r":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0}},"df":2}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.7320508075688772}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.449489742783178},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":2},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.449489742783178},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2},"z":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/set-ops/":{"tf":2.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":5}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":1}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772}},"df":1}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":2.23606797749979},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951}},"df":3}},"v":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}},"f":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1}}}}},"o":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":2}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.7320508075688772}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}},"y":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":2}}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":3}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":5}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/streets-behind/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/abc-string/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/data-structures/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":3}}}}}},"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":4.795831523312719},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2,"'":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.6457513110645907}},"df":3,"e":{"docs":{},"df":0,"q":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.23606797749979}},"df":2}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/java/":{"tf":4.0}},"df":1}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.7320508075688772}},"df":1}}}},"h":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.23606797749979},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":4}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":3}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":2.6457513110645907}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":7.54983443527075}},"df":1,"e":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1,"n":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":2.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":4}},"x":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":3}},"i":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/theory/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":4}}}}},"y":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1},"v":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":2,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.449489742783178},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":2}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/training/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":2}},"e":{"docs":{"https://latenitecoding.github.io/balanced-tree-path/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":3}},"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/tricks/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/triple-sevens/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"o":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":8}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":4.58257569495584},"https://latenitecoding.github.io/zig/":{"tf":3.605551275463989}},"df":4},"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":2.0},"https://latenitecoding.github.io/zig/":{"tf":2.0}},"df":5}}}}},"u":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":2,"n":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":3.4641016151377544}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":3.3166247903554},"https://latenitecoding.github.io/set-ops/":{"tf":3.7416573867739413},"https://latenitecoding.github.io/set-theory/":{"tf":2.0}},"df":4}},"q":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":2.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.7320508075688772}},"df":3}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":3}}}},"p":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":2.23606797749979}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.8284271247461903},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/java/":{"tf":4.123105625617661},"https://latenitecoding.github.io/on-call-team/":{"tf":1.7320508075688772},"https://latenitecoding.github.io/set-theory/":{"tf":2.6457513110645907},"https://latenitecoding.github.io/zig/":{"tf":4.795831523312719}},"df":7,"a":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.23606797749979},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":3.1622776601683795}},"df":4}},"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":2.23606797749979},"https://latenitecoding.github.io/set-theory/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"u":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":1}}},"i":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2,"f":{"docs":{"https://latenitecoding.github.io/champernowne-verification/":{"tf":1.0},"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.4142135623730951}},"df":2}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":2.8284271247461903}},"df":1}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":1}}},"w":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2}},"y":{"docs":{"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":2}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/halls-theorem/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":4}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.0},"https://latenitecoding.github.io/java/":{"tf":2.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/java/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":3}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":1},"k":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.7320508075688772}},"df":1,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":1}}}}}},"x":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":3.4641016151377544},"https://latenitecoding.github.io/set-ops/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/set-theory/":{"tf":6.0}},"df":3},"y":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":2.449489742783178},"https://latenitecoding.github.io/halls-theorem/":{"tf":3.0},"https://latenitecoding.github.io/set-theory/":{"tf":4.123105625617661}},"df":3,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0},"https://latenitecoding.github.io/on-call-team/":{"tf":1.4142135623730951},"https://latenitecoding.github.io/zig/":{"tf":2.449489742783178}},"df":3}},"r":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":2.23606797749979}},"df":2},"v":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0},"https://latenitecoding.github.io/zig/":{"tf":1.4142135623730951}},"df":2}}}}}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":5.0}},"df":1}}}}},"title":{"root":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/abc-string/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/algorithms/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://latenitecoding.github.io/archive/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/balanced-tree-path/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/streets-behind/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/bipartite-graph/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/a-cappella-recording/":{"tf":1.0}},"df":1}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/champernowne-verification/":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/contests/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/data-structures/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/four-die-rolls/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/segment-drawing/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/eccentric-excursion/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/range-editing/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/eccentric-excursion/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/exercises/":{"tf":1.0}},"df":1}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/cramming-for-finals/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://latenitecoding.github.io/flow-network/":{"tf":1.0},"https://latenitecoding.github.io/maximum-flow/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/four-die-rolls/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/matrix-fraud/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/bipartite-graph/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/rampant-growth/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://latenitecoding.github.io/sequence-guessing/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"'":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"p":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/item-selection/":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{"https://latenitecoding.github.io/java/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/languages/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://latenitecoding.github.io/matrix-fraud/":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/maximum-flow/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/flow-network/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://latenitecoding.github.io/bitwise-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/ordered-problem-set/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://latenitecoding.github.io/balanced-tree-path/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"tf":1.0},"https://latenitecoding.github.io/ordered-problem-set/":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/rampant-growth/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/range-editing/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://latenitecoding.github.io/a-cappella-recording/":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/icpc-regionals-2023/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/four-die-rolls/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/segment-drawing/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/item-selection/":{"tf":1.0}},"df":1}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://latenitecoding.github.io/sequence-guessing/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://latenitecoding.github.io/ordered-problem-set/":{"tf":1.0},"https://latenitecoding.github.io/set-ops/":{"tf":1.0},"https://latenitecoding.github.io/set-theory/":{"tf":1.0}},"df":3},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/triple-sevens/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://latenitecoding.github.io/streets-behind/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/abc-string/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://latenitecoding.github.io/data-structures/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/on-call-team/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://latenitecoding.github.io/halls-theorem/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://latenitecoding.github.io/set-theory/":{"tf":1.0},"https://latenitecoding.github.io/theory/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://latenitecoding.github.io/training/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{"https://latenitecoding.github.io/balanced-tree-path/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://latenitecoding.github.io/tricks/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{"https://latenitecoding.github.io/triple-sevens/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{"https://latenitecoding.github.io/champernowne-verification/":{"tf":1.0}},"df":1}}}}},"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://latenitecoding.github.io/zig/":{"tf":1.0}},"df":1}}}}}},"documentStore":{"save":true,"docs":{"https://latenitecoding.github.io/":{"body":"","id":"https://latenitecoding.github.io/","title":""},"https://latenitecoding.github.io/_algorithms/":{"body":"","id":"https://latenitecoding.github.io/_algorithms/","title":""},"https://latenitecoding.github.io/_contests/":{"body":"","id":"https://latenitecoding.github.io/_contests/","title":""},"https://latenitecoding.github.io/_data_structures/":{"body":"","id":"https://latenitecoding.github.io/_data_structures/","title":""},"https://latenitecoding.github.io/_exercises/":{"body":"","id":"https://latenitecoding.github.io/_exercises/","title":""},"https://latenitecoding.github.io/_languages/":{"body":"","id":"https://latenitecoding.github.io/_languages/","title":""},"https://latenitecoding.github.io/_theory/":{"body":"","id":"https://latenitecoding.github.io/_theory/","title":""},"https://latenitecoding.github.io/_tricks/":{"body":"","id":"https://latenitecoding.github.io/_tricks/","title":""},"https://latenitecoding.github.io/a-cappella-recording/":{"body":"","id":"https://latenitecoding.github.io/a-cappella-recording/","title":"A Cappella Recording"},"https://latenitecoding.github.io/abc-string/":{"body":"","id":"https://latenitecoding.github.io/abc-string/","title":"ABC String"},"https://latenitecoding.github.io/about/":{"body":"About\n","id":"https://latenitecoding.github.io/about/","title":"About"},"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"body":"","id":"https://latenitecoding.github.io/acceptable-seating-arrangements/","title":"Acceptable Seating Arrangements"},"https://latenitecoding.github.io/algorithms/":{"body":"","id":"https://latenitecoding.github.io/algorithms/","title":"Algorithms"},"https://latenitecoding.github.io/archive/":{"body":"","id":"https://latenitecoding.github.io/archive/","title":"Archive"},"https://latenitecoding.github.io/balanced-tree-path/":{"body":"","id":"https://latenitecoding.github.io/balanced-tree-path/","title":"Balanced Tree Path"},"https://latenitecoding.github.io/bipartite-graph/":{"body":"","id":"https://latenitecoding.github.io/bipartite-graph/","title":"Bipartite Graph"},"https://latenitecoding.github.io/bitwise-ops/":{"body":"Bitwise AND\nThe bitwise AND operation (typically notated as &amp;) is an arithmetic operation\nthat takes two numbers (e.g., 32-bit integers) and computes a new number of the\nsame type with the following property.\n\nThe purpose of this operation is to determine which bits are shared between two\nnumbers or to specifically mask away bits that can be ignored. Given the above\nproperty, the following identities hold.\n\nImagine that you store two 16-bit integers (shorts) in one 32-bit integer\n(int). How could you access each short individually?\nYou can produce an upper mask, where the upper 16-bits are 1s and the lower\n16-bits are 0s, and a lower mask, where the upper 16-bits are 0s and the lower\n16-bits are 1s. Given some 32-bit integer A, if you compute the bitwise AND of\nA and the upper mask, then you've computed the first 16-bit short. Note that\nthis short is still stored in the upper 16-bits of a 32-bit integer, so the\nresult needs to be right-shifted by 16-bits. You must also be careful to\nuse an unsigned right-shift so that no additional 1s are introduced into the\nresult.\nTo compute the second short, you compute the bitwise AND of A and the lower\nmask. No right-shifting is required for the second short since it is already\nstored in the lower 16-bits.\nThis process is called masking, which is why the two values are called masks.\n","id":"https://latenitecoding.github.io/bitwise-ops/","title":"Bitwise Ops"},"https://latenitecoding.github.io/champernowne-verification/":{"body":"","id":"https://latenitecoding.github.io/champernowne-verification/","title":"Champernowne Verification"},"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"body":"","id":"https://latenitecoding.github.io/constraint-satisfaction-problem/","title":"Constraint Satisfaction Problem"},"https://latenitecoding.github.io/contests/":{"body":"","id":"https://latenitecoding.github.io/contests/","title":"Contests"},"https://latenitecoding.github.io/cramming-for-finals/":{"body":"This problem was introduced as part of the 2023 ICPC Regionals Contest held on Feb. 24th, 2024 for the SCUSA region. It is now archived on Kattis.\nProblem Link\nTest Cases and Solution\n\n    &nbsp;Reveal Solution \n    \n    The grid size for this problem is unmanageably large. However, the number of students in much smaller in comparison. Each student is identified by the grid position they've chosen as their table and a radius around that table from which they can be heard. Even though this means that each student's coordinates define a 2D circle, that circle overlays a grid and can therefore be represented as a collection of intervals. These intervals represent the rows of tables that can hear that student. Given that there are \\(n\\) students each with a radius of \\(d\\), there are approximately \\(2dn\\) intervals, or about \\(5 \\cdot 10^6\\), which is solvable.\n\n\nLet there be a function \\(f(r, c) \\rightarrow I \\) which computes a unique table number for a student sitting at row \\(r\\) and column \\(c\\). Iterate over the provided coordinates for the students and collect their unique table numbers into an array. Let this be the student tables.\n\n\n\nTo compute a student's table number, treat the 2D grid as a single 1D array. When a 2D grid is laid out as a 1D array, the rows of the 2D grid exist as consecutive intervals in the 1D array, each with a length equal to the number of columns in the 2D grid. Thus, computing the table number is about using the row number to jump to a specific interval in the 1D array and using the column number as an offset within that interval.\n\nDon't forget to use the 64-bit long type for table numbers. The largest table number is \\(10^{18}\\) which cannot be stored in a 32-bit int type.\n\n\n\n\nSort the student tables from least to greatest. Let the first table be the least table and start with the first row as the current row. If the least table cannot be heard from the current row, then Ashley can sit on the first row without hearing other students. The solution is \\(0\\).\n\n\n\nGiven a table number that corresponds to row \\(r\\), that table can be heard from any row \\(y\\) if \\(r-d \\leq y \\leq r+d\\).\n\n\nSince table numbers are laid out in a 1D array, we can use integer division to determine which row from the 2D grid a table belongs to.\n\n\n\n\n\nLet there by an array called cache that represents the number of students that can be heard from each table on the current row. Iterate over the student tables starting from the least table until you reach a table that cannot be heard from the current row.\n\n\nLet there be a function \\(len(t, r) \\rightarrow I\\) that computes the number of tables on row \\(r\\) that can hear a student seated at table \\(t\\). For each student's table, compute the number of tables on the current row that can hear them. Let this length be \\(l\\). Let the column of the student's table be \\(c\\). The tables on the current row that can hear the student are defined by the interval \\([c-\\frac{l}{2},c+\\frac{l}{2}]\\). Update each of these indices by \\(+1\\) in the cache. Also compute the number of tables on the previous row that can hear them. Let this length by \\(k\\). The tables on the previous row that can hear the student are defined by the interval \\([c-\\frac{k}{2},c+\\frac{k}{2}]\\). Update each of these indices by \\(-1\\) in the cache.\n\n\nYou do not need to compute the number of tables on the previous row if the current row is \\(0\\).\n\n\nSince table numbers are laid out in a 1D array, we can use modulus to determine which column from the 2D grid a table belongs to.\n\n\n\n\n\nTo compute the length of an interval, you'll need to use a bit of trigonometry. Given a table \\(t\\) that comes from row \\(y\\), you can define a right triangle whose height is \\(r - y\\) and whose hypotenuse is \\(d\\). The angle between is \\(\\alpha = \\arcsin(\\frac{h}{d})\\). Therefore the base of the triangle is \\(b = \\cos(\\alpha) \\cdot d\\). We only care about the discrete tables, so the interval length is \\(2 \\cdot \\lfloor b \\rfloor + 1\\).\n\nNote the inclusion of \\(0.0000001\\). This is used to ensure that numbers within an epsilon of 7 significant figures are considered to be the same number. Otherwise, the number \\(4.9999999\\) will be treated as \\(4\\) rather than \\(5\\).\n\n\n\n\nLet the number of students that can be heard from an unoccupied table be its noise level. Compute the minimum noise level for the current row by finding the table on the current row in the cache with the smallest value. Maintain the smallest noise level that you see across rows. If the noise level is ever \\(0\\), then the solution is \\(0\\).\n\nIn this problem, Ashley cannot sit at a table where a student is currently sitting. Since the noise level is guaranteed to be a non-negative number, you can use the sign of the noise level to indicate whether or not there is a student currently sitting at a given table. For example, if a table has a noise level of \\(+2\\), then that table is vacant and can hear two other students. However, if a table has a noise level of \\(-2\\), then that table is occupied and can hear two students (including the one seated at the table).\n\n\n\nIterate through the tables starting from the least table. For each table with column \\(c\\) s.t. the current row \\(y = c + d\\), remove this table's interval from the cache. The first table whose column \\(c\\) s.t. \\(y &lt; c + d\\) becomes the least table. Then repeat this algorithm from step (4) until there are no more tables left to process. Once all tables have been processed, the minimum noise level is the solution.\n\n\nOptimizations\n\n\nAfter processing the current row, if you discover that there is a table whose noise level is \\(0\\), then that is the solution.\n\n\nScanning the noise level of each element in the cache is too slow. However, you can keep track of the noise level of each table on a given row as you process the student tables without having to maintain a cache. Given a current row, each student that can be heard from that row is represented by an interval. These intervals each have a left value (which opens the interval) and a right value (which closes the interval). Store these intervals and sort them by least left, then least right. Iterate over the intervals. The noise level across tables increases by 1 for each left value and decreases by 1 for each right value. Each interval of length \\(2d\\) is an interval with a student sitting at the middle. Student tables cannot be occupied. Keep track of the smallest noise level across interval only considering tables that can be occupied. If there are any gaps between intervals, then the noise level on this row is \\(0\\) and the solution to the problem is also \\(0\\).\n\n\n\n","id":"https://latenitecoding.github.io/cramming-for-finals/","title":"Cramming for Finals"},"https://latenitecoding.github.io/data-structures/":{"body":"","id":"https://latenitecoding.github.io/data-structures/","title":"Data Structures"},"https://latenitecoding.github.io/eccentric-excursion/":{"body":"","id":"https://latenitecoding.github.io/eccentric-excursion/","title":"Eccentric Excursion"},"https://latenitecoding.github.io/exercises/":{"body":"","id":"https://latenitecoding.github.io/exercises/","title":"Exercises"},"https://latenitecoding.github.io/flow-network/":{"body":"","id":"https://latenitecoding.github.io/flow-network/","title":"Flow Network"},"https://latenitecoding.github.io/four-die-rolls/":{"body":"","id":"https://latenitecoding.github.io/four-die-rolls/","title":"Four Die Rolls"},"https://latenitecoding.github.io/halls-theorem/":{"body":"Hall's Theorem, also known as Hall's Marriage Theorem, can be used to decide whether or not a perfect matching exists in a bipartite graph. This can be  applied to solving constraint satisfaction problems (CSPs) where some members of a set X  need to be matched with members of a set Y, but these members can only be matched 1-to-1. \nThe advantage of Hall's Theorem is that it allows us to use set logic to determine whether or not a matching exists for some CSP. Typically, we would need to use a flow network to compute the maximal matching, or any matching, of a given graph. When applying Hall's Theorem, we don't need to construct a flow network or apply a max flow algorithm. We can instead match members of the power set of X to some selection of Y by only looking at the set of neighbors that each vertex in X has.\nIf you're going to be working with Hall's Theorem, it would be good to\nfamiliarize yourself with set union, set intersection, and the identities\nrelated to the cardinality of a set. One helpful identity has been included\nbelow. See Set Theory.\n\n\\(|A \\cup B| + |A \\cap B| = |A| + |B|\\)\n\nTheorem\nFor a bipartite graph G on the parts X and Y, the following conditions are\nequivalent.\n\n(a) There is a perfect matching of X into Y.\n(b) For each \\(T \\subseteq X \\), the inequality \\(|T| \\leq |N_g(T)| \\) holds.\n\nDefinitions\nLet G be a simple graph, and let S be a subset of the edges of G. If no two\nedges in S form a path (i.e., if no two edges share a vertex), then we can say\nthat S is a matching of G. A matching S of G is a perfect matching if\nevery vertex of G participates in some edge of S.\nLet G be a bipartite graph. The vertices of G can be partitioned into the parts\nX and Y, s.t. no two vertices of X share an edge in G and no two vertices in Y\nshare an edge in G. Let S be a matching of G. If every vertex in X participates\nin an edge of S, then we can say that S is a perfect matching of X into Y.\nFor a graph G and some subset T of the vertices of G, we can define the function\n\\(N_g(T)\\) as the set of vertices of G that share an edge with the vertices of\nT. If G is a bipartite with parts X and Y and T is some set of vertices of X,\nthen \\(N_g(T)\\) is some set of vertices of Y (i.e., it is the set of\ncandidates that can be matched to the members of T).\n\\[N_g(T) = \\text{ \\{ } v \\in V(G) \\text{ | } vw \\in E(G) \\text{ for some } w \\in T \\text{ \\} } \\]\nExercises\n\nOn-Call Team\n\n","id":"https://latenitecoding.github.io/halls-theorem/","title":"Hall's Theorem"},"https://latenitecoding.github.io/icpc-regionals-2023/":{"body":"The ICPC Regionals 2023 was a programming contest held on Feb. 24th, 2024 for the Big South Region of the USA. The contest featured over a dozen problems in two separate divisions of play. Contestants had 5 hours to complete as many problems as they could. The contest is now archived on Kattis.\nContest Link\nTest Cases and Solutions\nDivision I\n\nABC String\nBalanced Tree Path\nCramming for Finals\nOrdered Problem Set\nEccentric Excursion\nMatrix Fraud\nOn-Call Team\nRange Editing\nItem Selection\nSequence Guessing\nStreets Behind\nSegment Drawing\nChampernowne Verification\n\nDivision II\n\nABC String\nBalanced Tree Path\nA Cappella Recording\nOrdered Problem Set\nAcceptable Seating Arrangements\nFour Die Rolls\nRampant Growth\nTriple Sevens\nItem Selection\nSequence Guessing\nStreets Behind\nTraining\nChampernowne Verification\n\n","id":"https://latenitecoding.github.io/icpc-regionals-2023/","title":"ICPC Regionals 2023"},"https://latenitecoding.github.io/item-selection/":{"body":"","id":"https://latenitecoding.github.io/item-selection/","title":"Item Selection"},"https://latenitecoding.github.io/java/":{"body":"Java is a general purpose programming language designed for enterprise scale software development. It is an object-oriented programming language that offers memory safety and robust deployment via the Java virtual machine (JVM) and its tri-generational garbage collector. Java is about 2x slower than C which is achieved through its multipass just-in-time (JIT) compiler that offers additional optimizations at runtime over the lifecycle of a program. Although not the most popular language across newer students, Java is still widely used across K-12 programs and at universities. This is in large part due to its staying power in corporate and enterprise applications both because of the vast amount of legacy code as well as the wide availability of programmers that can use the language. \nEntry Point\nJava follows the C paradigm of having an explicitly defined main method that can be used as the program entry point.\n\nPrinting on Standard Output\nJava provides the class System.out which is a java.io.OutputStream and can be used to print output on STDOUT. While .println() is the most common method, System.out also provides .print() and .printf() which can be used to print without a newline character or to use formatted printing, respectively. It should be noted that the newline character used by .println() is platform dependent.\n\nReading from Standard Input\nThe preferred approach to reading input from STDIN is to use the java.io.BufferedReader class. It provides a .readLine() method that can be used to read a single line of input from STDIN. It will parse and consume the next \\n or \\r\\n. Note that both constructing this class and calling its methods can result in an java.io.IOException.\n\nIf the input contains an array of integers, then we can use a combination of the java.io.BufferedReader and the java.util.Arrays classes to parse the input.\n\nGenerics\nJava, like many languages of its kind, permits the use of generics to subtype a class when the underlying subtype can be treated as opaque (i.e., the structure of the subtype is irrelevant). This is extremely useful for defining various kinds of abstract data types (ADTs), such as Collections. Lists, Queues, Sets, Trees, Maps, etc. rarely care about the underlying representation of the data they contain. They simply care about the structure that they employ to organize the data. As computer scientists and engineers, that's what we care about too.\nThe following is an example of a generic subtype in Java and its use within methods and when defining variables.\n\nThe primary intention of generics is to reduce the number of subtypes that need to be implemented for some class when the underlying subtype is opaque. Instead of defining a List for handling Integers and a List for handling Strings, we can define a single List that handles a generic subtype.\nThe downside of generics--specifically within Java--is that they're implemented extremely poorly. Generic support was not a part of the original language specification and had to be added into the language later, which has been true of most older statically typed languages. In short, the Java engineers at the time could not find an adequate design to include generics into the language and opted for a more shallow design called type erasure. After a Java class is compiled, its generic subtype is erased and replaced with the more general Object type. This has two very serious consequences.\nFirst, Java's static type enforcement is undermined and can no longer guarantee program correctness in all cases. Classes could already be subtyped with the Object type. This would permit a Collection to have a mixture of different kinds of objects and would place the responsibility on the developer to ensure that only permissible types were used, if such constraints needed to be enforced. The inclusion of a generic type offers the possibility that a Collection could be defined over any type but only include members of the same type. Since Java employs type erasure, this constraint can only be enforced at compile time. Types are typically checked at compile time, so this should be fine. Except the pre-existing language semantics permit subtypes to be ignored when the Object subtype is being used. This leads to a blind spot in Java's type enforcement when subtypes are omitted although it does result in a warning.\nNormally, if you attempt to assign a Collection&lt;A&gt; to a variable whose type is Collection&lt;B&gt;, then the operation should only be permissible if A is a subtype of B. This is permissible because a variable whose type is Collection&lt;B&gt; could reasonably hold members of type A, since they are also a subtype of B. However, a generic always indicates a type, such as String or Integer, that is a subtype of Object. Therefore, we shouldn't be able to assign a Collection&lt;Object&gt; to a variable whose type is Collection&lt;String&gt;, since a Collection of Strings wouldn't reasonably hold members that are other types of Objects, such as Integers. Due to type erasure, this is permissible in Java since a Collection&lt;String&gt;is actually a Collection&lt;Object&gt; and assigning a Collection&lt;Object&gt; to a variable whose type is Collection&lt;Object&gt; appears perfectly reasonable. This leads to some extremely strange results that permit a Collection to be both a Collection&lt;String&gt; and Collection&lt;Integer&gt; simultaneously.\n\nSecond, Java's performance dramatically declines when using classes that include the generic subtype. This specifically occurs when using the Object representation of primitives (e.g., Integer, Long, Float, Double, etc.). Since generics are erased into Objects and primitives are not Objects, generics cannot currently support primitives. As such, all primitive values must be autoboxed into an Object when added to a generic Collection and unboxed back into a primitive when removed. This leads to a significant GC load due to the massive population of unnecessary Objects stored in the Collection and the large amount of garbage created through constant boxing and unboxing. In most cases, this performance degradation can be ignored. However, in performance critical software, it cannot.\nFurthermore, in competitive programming, transforming an int[] into an ArrayList&lt;Integer&gt; can be the singular reason why test cases result in a time limit exceeded (TLE). The mem allocations associated with each int being autoboxed into an Integer plus the GC load to manage those Objects results in a significantly larger running time. Competitive programmers are therefore strongly advised to ignore all Collections provided by the Java standard library as well as any other classes that employ generics until primitives receive generic support. Arrays and non-generic implementations of a Node class should be employed instead.\n\n","id":"https://latenitecoding.github.io/java/","title":"Java"},"https://latenitecoding.github.io/languages/":{"body":"","id":"https://latenitecoding.github.io/languages/","title":"Languages"},"https://latenitecoding.github.io/matrix-fraud/":{"body":"","id":"https://latenitecoding.github.io/matrix-fraud/","title":"Matrix Fraud"},"https://latenitecoding.github.io/maximum-flow/":{"body":"","id":"https://latenitecoding.github.io/maximum-flow/","title":"Maximum Flow"},"https://latenitecoding.github.io/on-call-team/":{"body":"This problem was introduced as part of the 2023 ICPC Regionals Contest held on Feb. 24th, 2024 for the SCUSA region. It is now archived on Kattis.\nProblem Link\nTest Cases and Solution\n\n    &nbsp;Reveal Solution \n    \n    The number of services indicated in the problem is limited to a maximum size of 20 services. The size of the power set of these services is therefore limited to \\(2^{20} \\approx 10^6\\), which is solvable.\n\n\nAssume that the target robustness level is the maximum number of services \\(m\\). Then, compute each possible selection of services by looking at each number in range 1..\\(2^m\\) (exclusive). Each of these numbers represents some selection of bits, where the jth bit indicates whether the jth service has been selected. Let's call this number the mask.\n\n\nGiven some jth service, you can determine whether that service has been selected by computing the bitwise AND of the mask and \\(2^j\\). If the result is greater than 0, then the jth service has been selected. See Bitwise AND.\n\n\n\n\n\nFor each selected service, iterate over the engineers that are assignable to that service. Compute the total number of engineers that can be assigned to at least one of the selected services. This is the number of assignable engineers.\n\n\nTo assist with this step, you can assign each engineer to each service they can support when the engineers are first processed. Thus, the engineers that are assignable to each service will already be known when this step is reached. This also improves the performance of computing the union of assignable engineers by limiting our scope to only those engineers that are known to be within the union. The following snippet can be used to assign engineers to their respective services. Note that an array is used instead of an ArrayList or HashSet. See Generics.\n\nSee Snippets.\n\n\nTo compute the number of assignable engineers, you have to compute the size of the union of engineers that can be assigned to any of the services in the selection. Since you'll have to do this for each mask, you'll need to compute the sizes of many different unions. This process can easily lead to wasted performance and memory. To improve the process, you can reuse an int[] to mark which engineers are the current union. See Fast Union Size.\n\nSee Snippets.\n\n\n\n\nLet the number of selected services in the mask be \\(k\\). If the number of assignable engineers (union size) is less than \\(k\\), then the target robustness level must also be less than \\(k\\). It can be at most \\(k - 1\\). Store the minimum robustness level between the current target robustness level and \\(k - 1\\).\n\nSee Snippets.\n\n\nThe number of selected services can be computed using the mask bitcount, which is the number of 1-bits in the number.\n\nSee Snippets.\n\n\n\n\nSee\n\nHall's Theorem\n\nOptimizations\n\n\nBefore considering a mask, compute its bitcount. If its bitcount is larger than the current target robustness level, then ignore the mask. It represents a selection of services larger than the robustness level that can be obtained by the engineers.\n\n\nWhen computing the size of the union of engineers that can be assigned across the current selection of services, stop once you have enough engineers. As you compute the union, the number of engineers in the union can only grow larger. Once the number of engineers in the union is at least the number of selected services, Hall's theorem has been satisfied. You can move on to the next mask.\n\n\n\n","id":"https://latenitecoding.github.io/on-call-team/","title":"On-Call Team"},"https://latenitecoding.github.io/ordered-problem-set/":{"body":"","id":"https://latenitecoding.github.io/ordered-problem-set/","title":"Ordered Problem Set"},"https://latenitecoding.github.io/pages/":{"body":"","id":"https://latenitecoding.github.io/pages/","title":""},"https://latenitecoding.github.io/rampant-growth/":{"body":"","id":"https://latenitecoding.github.io/rampant-growth/","title":"Rampant Growth"},"https://latenitecoding.github.io/range-editing/":{"body":"","id":"https://latenitecoding.github.io/range-editing/","title":"Range Editing"},"https://latenitecoding.github.io/segment-drawing/":{"body":"","id":"https://latenitecoding.github.io/segment-drawing/","title":"Segment Drawing"},"https://latenitecoding.github.io/sequence-guessing/":{"body":"","id":"https://latenitecoding.github.io/sequence-guessing/","title":"Sequence Guessing"},"https://latenitecoding.github.io/set-ops/":{"body":"Fast Union Size\nSee Set Union.\nThere are several ways to compute the union of sets that range in complexity from \\(O(n)\\) to \\(O(n^3)\\), where \\(n = |S_1| + |S_2| + ...\\). The notation \\(|X|\\) represents the cardinality or size of the set X (i.e., the number of elements that it contains). This particular approach to computing the union of sets is \\(O(n)\\). Its purpose is to increase the performance of computing the union of sets across multiple successive computations of a set union by reducing mem allocations. It can generally be applied in cases where only the size of the union is needed rather than the individual elements in the union.\nGiven sets A, B, and C, to compute \\(|A \\cup B \\cup C|\\), we would normally compute \\(A \\cup B\\) and then compute \\((A \\cup B) \\cup C\\). In this case, two set unions would be computed. In general, given \\(m\\) sets, \\(m - 1\\) set unions have to be computed. In the previous example, the intermediate set \\(A \\cup B\\) has to be computed first. Space has to be allocated to hold this set. In order to improve performance, this intermediate should be reused across successive union operations to prevent wasted mem allocations. However, if many different set unions have to be computed that will not be combined--or it is at least unclear if they will be combined--then separate intermediate sets have to be allocated for, which results in reduced performance. In such cases, this algorithm can help by employing an array that can be reused across successive unions.\nRequirements:\n\nComputing many unions across sets A, B, C, ..., where each set is a subset of some known universal set U whose size is \\(n\\).\n\n\nSee Snippets.\n","id":"https://latenitecoding.github.io/set-ops/","title":"Set Ops"},"https://latenitecoding.github.io/set-theory/":{"body":"Definition\nA set is an unordered collection of objects s.t. each object in the set is unique.\nSince a set is unordered, its elements have no assigned indices. Sets have no inherent structure, and the elements of a set can be represented in any order. For example, the sets A = {1, 2, 3} and B = {3, 2, 1} are the same sets. Sets are typically notated as a collection of elements between curly braces.\nThe elements of a set are unique, which means that each element in a given set can only appear once across the set. This makes sets extremely useful for determining which elements uniquely appear across some larger collection.\nThe common operations related to sets are cardinality, difference, intersection, members, and union.\nSet Cardinality\nThe cardinality, or size, of a set indicates the number of elements in the set. Given a set X, its cardinality is denoted \\(|X|\\).\nSet Difference\nThe difference of two sets A and B is denoted \\(A - B = C\\) and has the following property.\n\nAn element \\(x \\in C\\) iff \\(x \\in A\\) and \\(x \\not\\in B\\).\n\nIn other words, the difference of sets A and B determines which elements only appear in A.\nSet Intersection\nThe intersection of two sets A and B is denoted \\(A \\cap B = C\\) and has the following property.\n\nAn element \\(x \\in C\\) iff \\(x \\in A\\) and \\(x \\in B\\).\n\nThe intersection of two sets determines which elements appear in both sets.\nSet Membership\nThe notation \\(x \\in X\\) is typically used to denote that some element x is a member of the set X. Lowercase letters are commonly used as variables of elements in a set while uppercase letters are typically used as variables for the sets themselves. Similarly, the notation \\(x \\not\\in X\\) is used to indicate that the element x is not in the set X.\nSet Union\nThe union of two sets A and B, denoted \\(A \\cup B = C\\), has the following property.\n\nAn element \\(x \\in C\\) iff \\(x \\in A\\) or \\(x \\in B\\).\n\nThe union of two sets determines which elements appear in either of the two sets. Note that since the elements of a set must be unique, if an element appears in both set A and set B, then it only appears once in set C. As such, it should be understood that \\(|A \\cup B| \\neq |A| + |B|\\) in most cases. The equality only holds if the intersection of sets A and B is empty. This leads to a commonly known set theorem.\n\n\\(|A \\cup B| + |A \\cap B| = |A| + |B|\\)\n\nEmpty Set\nThere is a special set called the empty set denoted \\(\\empty\\) that contains no elements. It is therefore also true that \\(|\\empty| = 0\\).\nSubsets\nA set X is called a subset of Y denoted \\(X \\subseteq Y\\) if every element \\(x \\in X\\) is also an element of Y (\\(x \\in Y\\)). If \\(X \\subseteq Y\\) and there is some element \\(y \\in Y\\) that is not in X (\\(y \\not\\in X\\)), then we can say that X is a proper subset of Y denoted \\(X \\subset Y\\).\nThe use of subsets provides a convenient notation to describe some collection of elements when all possible elements are known. The collection of all possible elements is typically referred to as the universal set and is denoted \\(U\\). The idea opposite to the universal set would be the empty set, which contains no elements. Two interesting axioms follow from these ideas.\n\nGiven some universal set \\(U\\), for any set X, \\(X \\subseteq U\\).\nGiven some set X, \\(\\empty \\subseteq X\\).\n\nThe last axiom is the most surprising and should be committed to memory. The empty set is considered to be a subset of all other sets, including itself.\nPower Set\nGiven a set Y, we can define the power set of Y denoted \\(P(Y)\\) s.t. all sets X where \\(X \\subseteq Y\\), \\(X \\in P(Y)\\).\nThe power set of a given set Y is a collection of all subsets of Y, including the empty set. It is useful for expressing all possible selections of all possible sizes that could be taken from Y. Given its construction, the size of the power set is always known.\n\nGiven some set Y, \\(|P(Y)| = 2^{|Y|}\\).\n\n","id":"https://latenitecoding.github.io/set-theory/","title":"Set Theory"},"https://latenitecoding.github.io/streets-behind/":{"body":"","id":"https://latenitecoding.github.io/streets-behind/","title":"Streets Behind"},"https://latenitecoding.github.io/theory/":{"body":"","id":"https://latenitecoding.github.io/theory/","title":"Theory"},"https://latenitecoding.github.io/training/":{"body":"","id":"https://latenitecoding.github.io/training/","title":"Training"},"https://latenitecoding.github.io/tricks/":{"body":"","id":"https://latenitecoding.github.io/tricks/","title":"Tricks"},"https://latenitecoding.github.io/triple-sevens/":{"body":"","id":"https://latenitecoding.github.io/triple-sevens/","title":"Triple Sevens"},"https://latenitecoding.github.io/zig/":{"body":"Zig is a general purpose systems programming language that advertises an emphasis on robust, optimal, and reusable software. Their advertisement isn't as catchy as blazingly fast and often leads developers to ask \"Why zig?\" when we have Rust, Go, C, and C++. This language undersells itself and should not be underestimated. While it is still in early development (0.12 at the time of this posting), Zig already has a huge value proposition that no other language can boast. Zig is our first programming language since C that can actually be used as an alternative to C while maintaining C interoperability.\nUnlike C, it encourages memory safety (without requiring it) via a language implementation that makes memory safety easier to accomplish while making memory unsafety more difficult to implement. This is a consequence of its core tenets of no hidden control flow and no hidden allocations. In Zig, you have to be explicit about everything your program is doing which means that classic examples of memory unsafe operations have to be explicitly coded and cannot be a matter of \"accident\". This in turn means that programmers are less likely to make these kinds of mistakes because they can only make these mistakes intentionally.\nIt is worth mentioning that explicit is not the same as verbose. For example, Java is a verbose language, but it's not an explicit language. Java is verbose because its high-level features have many associated and optional keywords that have to be selected from each time a method or class is defined. In addition, Java includes highly nested namespaces that lead to longer declarations when employing classes or their methods. This leads to verbose code but not explicit code. A great example of this is the new keyword. The new keyword is used to instantiate an Object. Other than the choice and implementation of the constructor, you the programmer have no control over what happens to your program when you use the new keyword. As such, it is not explicit. Zig is an explicit language. It is not a verbose language. It includes many modern and high-level features that make writing code fun and more convenient, significantly more convenient than writing code in C.\nZig, like C, is fast. It also boasts faster compiler times, which should only get faster throughout the year. C/C++ compile times are famously slow (hours for large projects). One of the main reasons why C compile times are slow are due to its use of a preprocessor, which is used to process macros prior to compiling the source code. This preprocessing step also leads to significant problems in program correctness. It is hard to determine how a macro will affect the program, what macros are currently in effect, and what aspects of the program will change due to macros. Zig does not support macros. It instead supports a novel feature called comptime. comptime refers to Zig code that is actually executed at compile time rather than runtime. This means that comptime code has a different executing context than non-comptime code, but comptime code can still be reasoned about because it's still the execution of Zig code. This is huge leap forwards for programming languages compared to traditional macros. One of the many benefits that this provides, for example, is the implementation of generics. Zig has one of the nicest implementations of generics across modern languages, and it is completely supported via comptime. This is something that could not otherwise be done in C.\nEntry Point\nZig uses the traditional C style entry point with an explicit main function. All functions in Zig are private by default so the main function needs to be explicitly listed as public. Otherwise, it cannot be used as an entry point and the compiler will complain.\n\nThe !void type is likely strange to many developers. Newer programming languages are incorporating what are called monads, or algebraic types, into their language. The two main algebraic types that are being included are the Optional type and the Result type. The Optional type is used to specify whether a value can be null. The Result type is used to specify whether an error can occur in the function. Zig uses a shorthand for these two algebraic types. If a value could be null, you'll see a ? next to the type. For example, the type ?i32 means that the value could be a 32-bit signed integer or null. If the function could error, then you'll see a ! next to the type. The !void type means that the main function could error or terminate without returning a value.\nPrinting on Standard Output\nAs mentioned earlier, Zig is explicit. One great example of this is printing in Zig. In most languages, printing is very concise. In Zig, you need to specify what you're going to use to print. In most cases, you'll just be using the STDOUT handle of your process. The STDOUT handle can be accessed via the standard library, which has to be explicitly imported. From the standard library, you can access the writer associated with STDOUT to print text to console. There is no println in Zig, and all printing is formatted by default.\n\nBuffered Writer\nA slightly better way to print is actually using a buffered writer, which can buffer the output before executing any system calls to print the text to console. The output is buffered into an array. Zig provides a factory method to produce a buffered writer with a 4KB buffer.\n\nReading from Standard Input\nReading from STDIN requires a similar approach to printing on STDOUT. You'll first need to acquire a reader for the STDIN handle, which comes from the standard library. You can use that reader to parse input up to a specific delimiter of your choice. The most common choice is the newline character for parsing by lines. The reader is used to parse input from STDIN into a byte buffer. Similar to C, you'll need to declare this buffer yourself. The most paralyzing aspect of this for new programmers is choosing the size of the buffer because you could choose anything and you don't typically know exactly how much content you're going to receive. If you're not sure, you can always choose 4096 (4KB) since that's the default size that Zig uses for its buffers anyway.\n\nThe buffer = undefined likely looks strange. This kind of syntax isn't common and other languages that use this syntax, like JavaScript, mean something different by undefined. In Zig, when a variable is declared as undefined, you're explicitly declaring that the variable's data is undefined, not that the variable itself is undefined. In this case, var buffer: [4096]u8 = undefined; means that the buffer exists and all 4096 indices of the byte buffer have data, but you don't know what that data is. The buffer does have data. It just hasn't been defined.\nMost programmers are used to having default values associated with their data types. For example, a new byte buffer would be allocated as an array of \\(0\\)'s. Default values are very convenient, but they can also be misleading. The language isn't able to magically allocate an array and have every element be defined as \\(0\\). It first allocates the array and then sets each element to the default value by iterating over the array. Languages that provide default values are typically optimized to do this very quickly, but the process is still the same nonetheless.\nIn practice, memory that's been used isn't typically \"cleaned up\". Imagine that you have an array of primes. That array of primes lives somewhere in memory. When the program terminates, it doesn't zero out that array by replacing each element with a \\(0\\). The array of primes is simply just left there. It will continue to just sit in memory until overwritten by some other program that uses that memory. It's possible that you might execute the program again and the program allocate an array for primes exactly over the previous region that was used to hold the primes. In which case, this new array would already contain its primes without the program having to compute any of them again. However, this would be happy coincidence. A program has no way to guarantee that kind of behavior. The underlying data that the array sits on top of could just as easily be some other array of integers, the instructions for a \"Hello, World!\" program, or a letter to your mom. The point is that every allocated array sits on top of some underlying data. But the program doesn't know what that data is. That data is undefined.\nTo drive that point home, it's not that the data is undefined because you marked it as undefined in Zig. Zig has you mark it as undefined because the data is actually undefined. Zig is having you be explicit about what the data is so that you acknowledge what it is that you're working with. Operating on undefined data accidentally is a common source of bugs especially for programmers that are used to having default values.\nBuffered Reader\nJust as there is a buffered writer for writing, there is a buffered reader for reading. You'll still need to allocate a byte buffer yourself to hold the input content. The purpose of the buffered reader isn't to give you a default buffer for the message but to reduce system calls associated with reading from STDIN, which are typically slower than copying from one array to the other. The buffered reader will reuse its buffer for consecutive reads whereas you may want to store the content from each read in a separate buffer. Hence why you still need to allocate your own buffer to hold the input content.\n\nThe msg in this case is a slice into the provided buffer. A slice is like a subarray. It points to a location in an array and has a length, which includes some set of contiguous elements from the array. Slices are a much more convenient way of dealing with portions of arrays. The slice msg includes the content that was read from STDIN but not the delimiter that was used. The input content and the delimiter are both in the provided buffer though.\n","id":"https://latenitecoding.github.io/zig/","title":"Zig"}},"docInfo":{"https://latenitecoding.github.io/":{"body":0,"title":0},"https://latenitecoding.github.io/_algorithms/":{"body":0,"title":0},"https://latenitecoding.github.io/_contests/":{"body":0,"title":0},"https://latenitecoding.github.io/_data_structures/":{"body":0,"title":0},"https://latenitecoding.github.io/_exercises/":{"body":0,"title":0},"https://latenitecoding.github.io/_languages/":{"body":0,"title":0},"https://latenitecoding.github.io/_theory/":{"body":0,"title":0},"https://latenitecoding.github.io/_tricks/":{"body":0,"title":0},"https://latenitecoding.github.io/a-cappella-recording/":{"body":0,"title":2},"https://latenitecoding.github.io/abc-string/":{"body":0,"title":2},"https://latenitecoding.github.io/about/":{"body":0,"title":0},"https://latenitecoding.github.io/acceptable-seating-arrangements/":{"body":0,"title":3},"https://latenitecoding.github.io/algorithms/":{"body":0,"title":1},"https://latenitecoding.github.io/archive/":{"body":0,"title":1},"https://latenitecoding.github.io/balanced-tree-path/":{"body":0,"title":3},"https://latenitecoding.github.io/bipartite-graph/":{"body":0,"title":2},"https://latenitecoding.github.io/bitwise-ops/":{"body":141,"title":2},"https://latenitecoding.github.io/champernowne-verification/":{"body":0,"title":2},"https://latenitecoding.github.io/constraint-satisfaction-problem/":{"body":0,"title":3},"https://latenitecoding.github.io/contests/":{"body":0,"title":1},"https://latenitecoding.github.io/cramming-for-finals/":{"body":634,"title":2},"https://latenitecoding.github.io/data-structures/":{"body":0,"title":2},"https://latenitecoding.github.io/eccentric-excursion/":{"body":0,"title":2},"https://latenitecoding.github.io/exercises/":{"body":0,"title":1},"https://latenitecoding.github.io/flow-network/":{"body":0,"title":2},"https://latenitecoding.github.io/four-die-rolls/":{"body":0,"title":3},"https://latenitecoding.github.io/halls-theorem/":{"body":249,"title":2},"https://latenitecoding.github.io/icpc-regionals-2023/":{"body":97,"title":3},"https://latenitecoding.github.io/item-selection/":{"body":0,"title":2},"https://latenitecoding.github.io/java/":{"body":605,"title":1},"https://latenitecoding.github.io/languages/":{"body":0,"title":1},"https://latenitecoding.github.io/matrix-fraud/":{"body":0,"title":2},"https://latenitecoding.github.io/maximum-flow/":{"body":0,"title":2},"https://latenitecoding.github.io/on-call-team/":{"body":308,"title":2},"https://latenitecoding.github.io/ordered-problem-set/":{"body":0,"title":3},"https://latenitecoding.github.io/pages/":{"body":0,"title":0},"https://latenitecoding.github.io/rampant-growth/":{"body":0,"title":2},"https://latenitecoding.github.io/range-editing/":{"body":0,"title":2},"https://latenitecoding.github.io/segment-drawing/":{"body":0,"title":2},"https://latenitecoding.github.io/sequence-guessing/":{"body":0,"title":2},"https://latenitecoding.github.io/set-ops/":{"body":157,"title":2},"https://latenitecoding.github.io/set-theory/":{"body":401,"title":2},"https://latenitecoding.github.io/streets-behind/":{"body":0,"title":2},"https://latenitecoding.github.io/theory/":{"body":0,"title":1},"https://latenitecoding.github.io/training/":{"body":0,"title":1},"https://latenitecoding.github.io/tricks/":{"body":0,"title":1},"https://latenitecoding.github.io/triple-sevens/":{"body":0,"title":2},"https://latenitecoding.github.io/zig/":{"body":916,"title":1}},"length":48},"lang":"English"};